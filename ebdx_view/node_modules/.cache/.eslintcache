[{"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\index.js":"1","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\reportWebVitals.js":"2","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\App.js":"3","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Language.js":"4","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\About.js":"5","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Home.js":"6","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SelectionMenu.js":"7","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\script.js":"8","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\api\\bootapi.js":"9","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\AllList.js":"10","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\OneList.js":"11"},{"size":583,"mtime":1682574844836,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1679285529677,"results":"14","hashOfConfig":"13"},{"size":3430,"mtime":1682921501338,"results":"15","hashOfConfig":"13"},{"size":212,"mtime":1679290645121,"results":"16","hashOfConfig":"13"},{"size":203,"mtime":1679290649465,"results":"17","hashOfConfig":"13"},{"size":200,"mtime":1679359479081,"results":"18","hashOfConfig":"13"},{"size":14192,"mtime":1682806084208,"results":"19","hashOfConfig":"13"},{"size":648,"mtime":1679368958329,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1682038848618,"results":"21","hashOfConfig":"13"},{"size":2262,"mtime":1682575064520,"results":"22","hashOfConfig":"13"},{"size":673,"mtime":1682575302023,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"yqr0zo",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\index.js",[],[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\reportWebVitals.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\App.js",["61","62","63","64","65","66"],[],"import React, { useState } from 'react';\nimport {Row,Col, Container, Card, DropdownItem} from \"reactstrap\";\nimport { BrowserRouter,Route,Routes,NavLink, Router } from 'react-router-dom';\nimport { Nav, NavDropdown, NavItem } from 'react-bootstrap';\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport Language from './Components/Language';\nimport logo from './image/logo.jpg';\nimport { ToastContainer } from 'react-toastify';\nimport SelectionMenu from './Components/SelectionMenu';\nimport AllList from './Components/AllList';\n\nfunction App() {\n\n    function closeTab(){\n        console.log(\"You clicked on exit\");\n        const confirmbox = window.confirm(\"Do you want to close this window?\")\n        if(confirmbox === true){\n            window.close();\n        }     \n    }\n\n  return (\n    <>\n        <BrowserRouter>\n            <div style={{\n                display: \"flex\",\n                background: 'lightblue',\n                padding: '5px 0 5px 5px',\n                fontSize: '20px',\n            }}>\n                <div style={{ margin: '10px' }}>\n                    <Nav>\n                        <NavDropdown title = \"Home\">\n                            <NavDropdown.Item onClick={closeTab}>Exit</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    {/* <NavLink to=\"/\" style={({ isActive }) => ({ \n                        color: isActive ? 'green' : 'white' })}>\n                        Home\n                        <DropdownItem>Exit</DropdownItem>\n                    </NavLink> */}\n                </div>\n                <div style={{ margin: '10px' }}>\n                    <NavLink to=\"/Language\" style={({ isActive }) => ({ \n                        color: isActive ? 'green' : 'white' })}>\n                        Language\n                    </NavLink>\n                </div>\n                <div style={{ margin: '10px' }}>\n                    <NavLink to=\"/About\" style={({ isActive }) => ({ \n                        color: isActive ? 'green' : 'white' })}>\n                        About\n                    </NavLink>\n                </div>\n            </div>\n            <div>\n            <ToastContainer />\n            <Container>\n                <Row>\n                    <Col md={4}>\n                        <React.Fragment>\n                            <SelectionMenu />\n                        </React.Fragment>    \n                    </Col>\n                    <Col md={8}>\n                        <div style={{height: '150px', width: '950px', margin: '5px'}}>\n                            <label style={{color: 'green'}}>Interchange Number</label>{' '}\n                        <input name=\"SearchTextbox\" type=\"textbox\"/> {' '}\n                                <button style={{background: 'green', color: 'white'}}>Go</button>\n                        <div className='logo' style={{float : 'right', margin : '10px'}}>\n                <img src={logo} height={100} width={200} /> \n            </div>\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                <Route exact path=\"/Language\" element={<Language />} />\n                <Route exact path=\"/About\" element={<About />} />\n            </Routes>\n            </div>\n            <AllList />\n        </Col>\n        </Row>\n        </Container>\n            </div>\n        </BrowserRouter>\n        \n    </>\n);\n}\n\nexport default App;\n","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Language.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\About.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Home.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SelectionMenu.js",["67","68","69","70"],[],"import React, { useState,useEffect } from \"react\";\r\nimport \"./selectmenu.css\";\r\nimport { Card, CardBody, CardHeader, FormGroup, Label, Input } from \"reactstrap\";\r\nimport base_url from \"../api/bootapi\";\r\nimport axios from \"axios\";\r\nimport AllList from \"./AllList\";\r\n\r\n\r\nfunction SelectionMenu() {\r\n\r\n    //  useEffect(() => {\r\n    //      const getAllSitesFromServer = () => {\r\n    //          axios.get(`https://ebx-services.com/ebdviewretail/documents?localSiteName=AFHOME`).then(\r\n    //              (response) =>{\r\n    //                 // console.log(response);\r\n    //                 console.log(response.data);\r\n    //                 setSites(response.data);\r\n    //              },\r\n    //              (error) => {\r\n    //                  console.log(error);\r\n    //              }\r\n    //          );\r\n    \r\n    //      };\r\n    //      getAllSitesFromServer();\r\n    //  }, []);\r\n\r\n    //const [sites, setSites] = useState([]);\r\n    const [selectedsite, setselectedsite] = useState([]);\r\n    \r\n    const [SitePartners, setSitePartners] = useState([]);\r\n    const [selectedpartner, setselectedpartner] = useState('')\r\n\r\n    // const sites = ['AFHOME','NPRO','SPTD']\r\n        // const SitePartners = {\r\n        //     'AFHOME': ['All Partner','A', 'F', 'H', 'O', 'M', 'E'],\r\n        //     'NPRO': ['All Partner','N', 'P', 'R', 'O'],\r\n        // }\r\n\r\n    const sites = [\r\n        {\r\n            name: \"AFHOME\",\r\n            partner: ['All Partners', 'Samsung', 'Lg','Sony','Hyundai','Nike']\r\n        },\r\n        {\r\n            name: \"NPRO\",\r\n            partner: ['All Partners', 'Dell', 'Iphone','Toyota']\r\n        },\r\n    ];\r\n\r\n         const handletextSite=(event)=> {\r\n            const selectedsite= event.target.value;\r\n             setselectedsite(selectedsite);\r\n             setSitePartners(sites.find(site => site.name === selectedsite).partner);\r\n         }\r\n\r\n         const handletextPartner=(event)=> {\r\n            const selectedpartner= event.target.value;\r\n            setselectedpartner(selectedpartner);\r\n         }\r\n\r\n         const handlesubmit = event =>\r\n         {\r\n            event.preventDefault();\r\n\r\n            if(fromdateformat > todatefromat)\r\n            {\r\n                alert(\"Start date can't bigger than from End date\");\r\n            }\r\n            else{\r\n                console.log('Success');\r\n            }\r\n           // getProductWithSitenParter(selectedsite,selectedpartner);\r\n            \r\n            <AllList Selectsite={selectedsite} Selectpartner={selectedpartner} />\r\n    \r\n         }\r\n         const getProductWithSitenParter = () => {\r\n            axios.get(`${base_url}/products/${selectedsite}/${selectedpartner}`).then(\r\n                (response) =>{\r\n                   // console.log(response);\r\n                   console.log(response.data);\r\n                   //setProducts(response.data);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n       };\r\n\r\n       const [disable, setDisable] = useState(true);\r\n       const [todate, setTodate] = useState([]);\r\n       const [fromdate, setFromdate] = useState([]);\r\n\r\n       const [todatefromat, setTodateformat] = useState('');\r\n    const [fromdateformat, setFromdateformat] = useState('');\r\n\r\n    const handlefromdate = (e) => {\r\n        const getfromdatevalue = e.target.value;\r\n        const setfromformat = getfromdatevalue.split('-');\r\n        const setfromyear = setfromformat[0];\r\n        const setfrommonth = setfromformat[1];\r\n        const setfromdate = setfromformat[2];\r\n        const setfromdateformat = setfromyear+\"\"+setfrommonth+\"\"+setfromdate;\r\n        const setfromdateformatshow = setfromdate+\"/\"+setfrommonth+\"/\"+setfromyear;\r\n        setFromdate(getfromdatevalue);\r\n        setFromdateformat(setfromdateformat);\r\n        setDisable(false);\r\n        console.log(getfromdatevalue);\r\n        console.log(setfromdateformat);\r\n        console.log(setfromdateformatshow);\r\n    }\r\n\r\n    const handletodate = (e) =>{\r\n        const gettodatevalue = e.target.value;\r\n        const setdateformat = gettodatevalue.split('-');\r\n        const settoyear = setdateformat[0];\r\n        const settomonth = setdateformat[1];\r\n        const settodate = setdateformat[2];\r\n        const settodateformat = settoyear+\"\"+settomonth+\"\"+settodate;\r\n        const settodateformatshow = settodate+\"/\"+settomonth+\"/\"+settoyear;\r\n        setTodate(gettodatevalue);\r\n        setTodateformat(settodateformat);\r\n        \r\n        console.log(gettodatevalue);\r\n        console.log(settodateformat);\r\n        console.log(settodateformatshow);\r\n    }\r\n        \r\n         \r\n\r\n         const [checkedboxvalue, setcheckedbox]=useState('');\r\n         const handleCheckbox1 = (e) => {\r\n            const checkedbox = e.target.checked;\r\n            setcheckedbox(checkedbox);\r\n            console.log(checkedbox);\r\n         }\r\n\r\n         const [handleCheckboxArchiveValue, sethandleCheckboxArchive]= useState('');\r\n         const handleCheckboxArchive = (e) => {\r\n            const archivecheck = e.target;\r\n            sethandleCheckboxArchive(archivecheck);\r\n            const archivevalue = archivecheck.value;\r\n            console.log(archivevalue);\r\n         }\r\n\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <section>\r\n                <Card style={{height: '970px', borderBlockEndColor: 'black', width: '350px'}}>\r\n                    <Card style={{height: '200px', borderBlockEndColor: 'black'}}>\r\n                    <CardHeader style={{fontWeight:'bold',backgroundColor: 'lightgreen', height: '30px'}}><h10>Partners</h10>\r\n                        </CardHeader>\r\n                    <CardBody>\r\n                        \r\n\r\n                <form style={{height: '80px', backgroundColor: 'white'}}>\r\n                    <FormGroup>\r\n                        <div>\r\n                            <Label style={{fontWeight:'bold', fontSize: '15px', color: 'blue'}}>Select local site</Label>\r\n                                <div className=\"dropdown\">\r\n                                    <div className=\"dropdown-content\">   \r\n                                        <select name=\"site\" className=\"dropdown-item\" placeholder=\"Select here\" onChange={(e)=>handletextSite(e)}>\r\n                                \r\n                                            {\r\n                                                sites.map(site => (\r\n                                                    <option value={site.name}>{site.name}</option>\r\n                                                ))\r\n                                            }\r\n                                            console.log(e.target.key);\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n                    </FormGroup>\r\n                    </form>\r\n                    <form>\r\n                    <FormGroup>\r\n                        <div>\r\n                    <Label style={{fontWeight:'bold', fontSize: '15px', color: 'blue'}}>Select Partner</Label>\r\n                    <div className=\"dropdown\">\r\n                    <div className=\"dropdown-content\">   \r\n                        <select name=\"partner\" placeholder=\"select here\" className=\"dropdown-item\" onChange={(e)=>handletextPartner(e)}>\r\n                        \r\n                            {\r\n                                SitePartners.map(partner => (\r\n                                    <option value={partner}>{partner}</option>\r\n                                ))\r\n                            } \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                    </div>\r\n                    </FormGroup>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n\r\n                    <Card style={{height: '260px', borderBlockEndColor: 'black'}}>\r\n                        <CardHeader style={{fontWeight:'bold',backgroundColor: 'lightgreen', height: '30px'}}><h10>Period</h10>\r\n                        </CardHeader>\r\n                    <CardBody>\r\n                    <form style={{height: '90px', backgroundColor: 'white'}} onSubmit={handlesubmit}>\r\n                    <FormGroup>\r\n                        <div>\r\n                            <label style={{fontWeight:'bold', fontSize: '15px', color: 'blue'}}>Last{' '}\r\n                            <input style={{width: '50px', paddingLeft: '10px'}} type=\"text\" id=\"days\" disabled value=\"1\"></input>\r\n                            {' '}days</label>\r\n                            </div>          \r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Input name=\"checkbox1\" value=\"Custom\" type=\"checkbox\" onChange={handleCheckbox1} /> {' '}\r\n                                <Label check>Custom</Label>\r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                             <Label check>Start date</Label>\r\n                                <Input name=\"date1\" type=\"date\" disabled={!checkedboxvalue} placeholder=\"dd/mm/yyyy\" onChange={(e)=>handlefromdate(e)} />\r\n                                \r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                             <Label check>End date</Label>\r\n                                <Input name=\"date2\" type=\"date\" disabled= {disable} placeholder=\"dd/mm/yyyy\" onChange={(e)=>handletodate(e)} />\r\n                                \r\n                             </FormGroup>\r\n                            </form>\r\n                    </CardBody>\r\n                    </Card>\r\n\r\n                    <Card style={{height: '90px', borderBlockEndColor: 'black'}}>\r\n                        <CardHeader style={{fontWeight:'bold',backgroundColor: 'lightgreen', height: '30px'}}><h10>Document Type</h10>\r\n                        </CardHeader>\r\n                    <CardBody>\r\n                    <form style={{height: '30px', backgroundColor: 'white'}}>\r\n                    <FormGroup>\r\n                        <div>\r\n                            <input style={{width: '300px', paddingLeft: '10px'}} type=\"text\" id=\"Documenttype\"></input>\r\n                            </div>          \r\n                            </FormGroup>\r\n                            </form>\r\n                            </CardBody>\r\n                            </Card>\r\n                            <Card style={{height: '90px', borderBlockEndColor: 'black'}}>\r\n                        <CardHeader style={{fontWeight:'bold',backgroundColor: 'lightgreen', height: '30px'}}><h10>Text</h10>\r\n                        </CardHeader>\r\n                    <CardBody>\r\n                    <form style={{height: '30px', backgroundColor: 'white'}}>\r\n                    <FormGroup>\r\n                        <div>\r\n                            <input style={{width: '300px', paddingLeft: '10px'}} type=\"text\" id=\"Texttype\"></input>\r\n                            </div>          \r\n                            </FormGroup>\r\n                            </form>\r\n                            </CardBody>\r\n                            </Card>\r\n                            <Card style={{height: '250px', borderBlockEndColor: 'black'}}>\r\n                        <CardHeader style={{fontWeight:'bold',backgroundColor: 'lightgreen', height: '30px'}}><h10>Document archive</h10>\r\n                        </CardHeader>\r\n                    <CardBody>\r\n                    <form style={{height: '90px', backgroundColor: 'white'}}>\r\n                    <FormGroup>\r\n                            <label style={{fontWeight:'bold', fontSize: '13px', color: 'blue'}}>Reception {handleCheckboxArchiveValue.value}</label>\r\n                                      \r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Input name=\"ReceptionBeforeTranslation\" value=\"ReceptionBeforeTranslation\" type=\"checkbox\" onChange={handleCheckboxArchive} /> {' '}\r\n                                <Label check>Before Translation</Label>\r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                             <Input name=\"ReceptionAfterTranslation\" value=\"ReceptionAfterTranslation\" type=\"checkbox\" onChange={handleCheckboxArchive} /> {' '}\r\n                                <Label check>After Translation</Label>\r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                            <label style={{fontWeight:'bold', fontSize: '13px', color: 'blue'}}>Sending</label>\r\n                                      \r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Input name=\"SendingBeforeTranslation\" value=\"SendingBeforeTranslation\" type=\"checkbox\" onChange={handleCheckboxArchive} /> {' '}\r\n                                <Label check>Before Translation</Label>\r\n                             </FormGroup>\r\n                             <FormGroup>\r\n                             <Input name=\"SendingAfterTranslation\" value=\"SendingAfterTranslation\" type=\"checkbox\" onChange={handleCheckboxArchive} /> {' '}\r\n                                <Label check>After Translation</Label>\r\n                             </FormGroup>\r\n                            </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    <card style={{height: '50px', borderBlockEndColor: 'black'}}>\r\n                        <CardBody>\r\n                            <form onSubmit={handlesubmit} style={{height: '50px', backgroundColor: 'white'}}>\r\n                                <FormGroup>\r\n                                <button type=\"submit\" style={{background: 'green', color: 'white', width: '150px'}}>Search</button>\r\n                                </FormGroup>\r\n                            </form>\r\n                        </CardBody>\r\n                    </card>\r\n                    </Card>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectionMenu","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\script.js",["71","72"],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\api\\bootapi.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\AllList.js",["73","74","75","76","77"],[],"import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../api/bootapi\";\r\nimport OneList from \"./OneList\";\r\nimport \"./tableContent.css\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, Container } from \"reactstrap\";\r\n\r\n\r\n\r\nconst AllList = () => {\r\n\r\n  /*   const getAllListFromServer = () => {\r\n        axios.get(`${base_url}/products`).then(\r\n            (response) =>{\r\n               // console.log(response);\r\n               console.log(response.data);\r\n               setProducts(response.data);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }; */\r\n\r\n        //getAllListFromServer();\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n              const getAllSitesFromServer = () => {\r\n                  axios.get(`/documents?localSiteName=AFHOME`).then(\r\n                      (response) =>{\r\n                         // console.log(response);\r\n                         console.log(response.data);\r\n                         setProducts(response.data);\r\n                      },\r\n                      (error) => {\r\n                          console.log(error);\r\n                      }\r\n                  );\r\n        \r\n              };\r\n              getAllSitesFromServer();\r\n          }, []);\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <section>\r\n            <Card className=\"App\">\r\n         <CardBody>\r\n        <table className=\"fixed_header\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Issue Date</th>\r\n                        <th>Product Name</th>\r\n                        <th>Prize</th>\r\n                        <th>Site Name</th>\r\n                        <th>Partner Name</th>\r\n                        <th>Interchange Number</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                 {products.length > 0\r\n                    ? products.map((item) => <OneList key={item.id} product={item} />)\r\n                    : \"No Product\"\r\n            } \r\n                </tbody>\r\n            </table> \r\n        </CardBody>\r\n        </Card>\r\n        </section>\r\n        </div>\r\n    );\r\n        }\r\n\r\nexport default AllList","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\OneList.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":2,"column":29,"nodeType":"80","messageId":"81","endLine":2,"endColumn":33},{"ruleId":"78","severity":1,"message":"83","line":2,"column":35,"nodeType":"80","messageId":"81","endLine":2,"endColumn":47},{"ruleId":"78","severity":1,"message":"84","line":3,"column":46,"nodeType":"80","messageId":"81","endLine":3,"endColumn":52},{"ruleId":"78","severity":1,"message":"85","line":4,"column":28,"nodeType":"80","messageId":"81","endLine":4,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":72,"column":17,"nodeType":"88","endLine":72,"endColumn":60},{"ruleId":"78","severity":1,"message":"89","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"90","line":78,"column":16,"nodeType":"80","messageId":"81","endLine":78,"endColumn":41},{"ruleId":"78","severity":1,"message":"91","line":92,"column":15,"nodeType":"80","messageId":"81","endLine":92,"endColumn":21},{"ruleId":"78","severity":1,"message":"92","line":93,"column":15,"nodeType":"80","messageId":"81","endLine":93,"endColumn":23},{"ruleId":"78","severity":1,"message":"93","line":4,"column":7,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"94","line":5,"column":7,"nodeType":"80","messageId":"81","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"95","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"96","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},{"ruleId":"78","severity":1,"message":"97","line":6,"column":34,"nodeType":"80","messageId":"81","endLine":6,"endColumn":46},{"ruleId":"78","severity":1,"message":"98","line":6,"column":48,"nodeType":"80","messageId":"81","endLine":6,"endColumn":56},{"ruleId":"78","severity":1,"message":"99","line":6,"column":58,"nodeType":"80","messageId":"81","endLine":6,"endColumn":67},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'DropdownItem' is defined but never used.","'Router' is defined but never used.","'NavItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'getProductWithSitenParter' is assigned a value but never used.","'todate' is assigned a value but never used.","'fromdate' is assigned a value but never used.","'optionSearch' is assigned a value but never used.","'options' is assigned a value but never used.","'base_url' is defined but never used.","'Button' is defined but never used.","'CardSubtitle' is defined but never used.","'CardText' is defined but never used.","'Container' is defined but never used."]