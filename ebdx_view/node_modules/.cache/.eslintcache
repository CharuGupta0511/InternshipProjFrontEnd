[{"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\index.js":"1","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\reportWebVitals.js":"2","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\App.js":"3","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Language.js":"4","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\About.js":"5","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Home.js":"6","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SelectionMenu.js":"7","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\script.js":"8","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\api\\bootapi.js":"9","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\AllList.js":"10","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\OneList.js":"11","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SearchButtonPopup.js":"12","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\ExitApp.js":"13","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\DatePopup.js":"14"},{"size":583,"mtime":1682574844836,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1679285529677,"results":"17","hashOfConfig":"16"},{"size":3274,"mtime":1684066444900,"results":"18","hashOfConfig":"16"},{"size":1001,"mtime":1684021586047,"results":"19","hashOfConfig":"16"},{"size":1001,"mtime":1684021596574,"results":"20","hashOfConfig":"16"},{"size":200,"mtime":1679359479081,"results":"21","hashOfConfig":"16"},{"size":19692,"mtime":1685099473488,"results":"22","hashOfConfig":"16"},{"size":648,"mtime":1679368958329,"results":"23","hashOfConfig":"16"},{"size":68,"mtime":1682038848618,"results":"24","hashOfConfig":"16"},{"size":7854,"mtime":1685075077051,"results":"25","hashOfConfig":"16"},{"size":822,"mtime":1683862606225,"results":"26","hashOfConfig":"16"},{"size":4050,"mtime":1684017131338,"results":"27","hashOfConfig":"16"},{"size":1176,"mtime":1684044001348,"results":"28","hashOfConfig":"16"},{"size":1050,"mtime":1685097884209,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"yqr0zo",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\index.js",[],[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\reportWebVitals.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\App.js",["77","78","79","80","81","82","83","84"],[],"import React, { useState } from 'react';\nimport {Row,Col, Container, CardBody, Card, FormGroup, DropdownItem} from \"reactstrap\";\nimport { BrowserRouter,NavLink } from 'react-router-dom';\nimport { Nav, NavDropdown, NavItem } from 'react-bootstrap';\nimport About from './Components/About';\nimport { ToastContainer } from 'react-toastify';\nimport SelectionMenu from './Components/SelectionMenu';\nimport Language from './Components/Language';\nimport ExitApp from './Components/ExitApp';\n\nfunction App() {\n\n   /*  function closeTab(){\n        console.log(\"You clicked on exit\");\n        const confirmbox = window.confirm(\"Do you want to exit this page?\")\n        if(confirmbox === true){\n            window.close();\n        }     \n    } */\n\n    const [showModal, setShowModal] = useState(false);\n    const [showModalLanguage, setShowModalLanguage] = useState(false);\n    const [showModalExit, setShowModalExit] = useState(false);\n\n  return (\n    <>\n        <BrowserRouter>\n            <div style={{\n                display: \"flex\",\n                background: 'lightgreen',\n                padding: '5px 0 5px 5px',\n                fontSize: '20px',\n                height: '70px',\n                border: '2px solid green',\n            }}>\n                <div style={{ margin: '10px', width: '80px' }}>\n                    <Nav>\n                        <NavDropdown title = \"Home\">\n                            <NavDropdown.Item style={{background: 'lightgreen',color: 'blue'}} onClick={() => setShowModalExit(true)}>Exit</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    {/* <NavLink to=\"/\" style={({ isActive }) => ({ \n                        color: isActive ? 'green' : 'white' })}>\n                        Home\n                        <DropdownItem>Exit</DropdownItem>\n                    </NavLink> */}\n                </div>\n                <div style={{ margin: '10px', width: '120px' }}>\n                    <Nav>\n                <NavDropdown title = \"Language\">\n                            <NavDropdown.Item style={{background: 'lightgreen',color: 'blue'}} onClick={() => setShowModalLanguage(true)}>French</NavDropdown.Item>\n                            \n                        </NavDropdown>\n                        </Nav>\n                </div>\n                <div style={{ margin: '10px', width: '100px' }}>\n                <Nav>\n                        <NavDropdown title = \"Help\">\n                            <NavDropdown.Item style={{background: 'lightgreen',color: 'blue'}} onClick={() => setShowModal(true)}>About eBDView</NavDropdown.Item>\n                            \n                        </NavDropdown>\n                    </Nav>\n                </div>\n            </div>\n            <div>\n            <ToastContainer />\n            \n            <Container>\n            <SelectionMenu />\n                {showModal && <About trigger={showModal} setTrigger={setShowModal} />}\n                {showModalLanguage && <Language trigger={showModalLanguage} setTrigger={setShowModalLanguage} />}\n                {showModalExit && <ExitApp trigger={showModalExit} setTrigger={setShowModalExit} />}\n        </Container>\n            </div>\n        </BrowserRouter>\n        \n    </>\n);\n}\n\nexport default App;\n","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Language.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\About.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\Home.js",[],[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SelectionMenu.js",["85","86","87","88","89","90","91"],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\script.js",["92","93"],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\api\\bootapi.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\AllList.js",["94","95","96","97","98","99","100","101","102","103"],[],"import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport base_url from \"../api/bootapi\";\r\nimport OneList from \"./OneList\";\r\nimport \"./tableContent.css\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, Container } from \"reactstrap\";\r\n\r\n\r\nfunction AllList(props) {\r\n\r\n    /* useEffect(() => {\r\n        const getAllListFromServer = () => {\r\n            axios.get(`${base_url}/products`).then(\r\n                (response) =>{\r\n                   // console.log(response);\r\n                   console.log(response.data);\r\n                   setProducts(response.data);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n        };\r\n        getAllListFromServer();\r\n    }, []); */\r\n         \r\n    const localsitevalue = props.localsite1;\r\n    const localsitepartnervalue = props.localsitepartner1;\r\n    const documenttypevalue = props.documentType1;\r\n    const fromdatevalue = props.fromdate1;\r\n    const todatevalue = props.todate1;\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    console.log(localsitevalue);\r\n    console.log(localsitepartnervalue);\r\n    console.log(documenttypevalue);\r\n    console.log(fromdatevalue);\r\n    console.log(todatevalue);\r\n\r\n         useEffect(() => {\r\n              getAllSitesFromServer();\r\n          },[]);\r\n          \r\n\r\n          const getAllSitesFromServer = () => {\r\n            if(localsitevalue === \"AFHOME\") {\r\n              axios.get(`/documents?localSiteName=AFHOME`).then(\r\n                  (response) =>{\r\n                     // console.log(response);\r\n                     console.log(response.data);\r\n                     setProducts(response.data.documents);\r\n                     \r\n                  },\r\n                  (error) => {\r\n                      console.log(error);\r\n                  }\r\n              );\r\n                }\r\n                else{\r\n                    axios.get(`/documents?localSiteName=NPRO`).then(\r\n                        (response) =>{\r\n                           // console.log(response);\r\n                           console.log(response.data);\r\n                           setProducts(response.data.documents);\r\n                        },\r\n                        (error) => {\r\n                            console.log(error);\r\n                        }\r\n                    );\r\n                }\r\n          };\r\n\r\n    return(\r\n        <div>\r\n            <section>\r\n            <div>\r\n                <div className=\"table-wrapper\">\r\n                <table>\r\n                <thead>\r\n                        <th>Date and Time</th>\r\n                        <th>Type</th>\r\n                        <th>Sender code</th>\r\n                        <th>Reciver code</th>\r\n                        <th>Partner</th>\r\n                        <th>File name</th>\r\n                        <th>Interchange Numnber</th>\r\n                        <th>Nber of documnet</th>\r\n                        <th>Doc Info</th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                    products.length > 0 && localsitepartnervalue === \"All Partners\" \r\n                    ? products.filter(item => {\r\n                         if(documenttypevalue && fromdatevalue && todatevalue){\r\n                            let setdateformat1 = item.dateLastModif.split(' ');\r\n                            let setdateformat = setdateformat1[0].split('/');\r\n                            let settodate = setdateformat[0];\r\n                            let settomonth = setdateformat[1];\r\n                            let settoyear = setdateformat[2];\r\n                            let settodateformat = settoyear+\"\"+settomonth+\"\"+settodate;\r\n                            if(item.type.toUpperCase().includes(documenttypevalue) && fromdatevalue <= settodateformat && todatevalue >= settodateformat){\r\n                                console.log(settodateformat);\r\n                                return(item.type && item.dateLastModif);\r\n                            }\r\n                        }\r\n \r\n                        else if(documenttypevalue){\r\n                            if(item.type.toUpperCase().includes(documenttypevalue))\r\n                                return (item.type);\r\n                        }\r\n\r\n                        else if(fromdatevalue && todatevalue){\r\n                            let setdateformat1 = item.dateLastModif.split(' ');\r\n                            let setdateformat = setdateformat1[0].split('/');\r\n                            let settodate = setdateformat[0];\r\n                            let settomonth = setdateformat[1];\r\n                            let settoyear = setdateformat[2];\r\n                            let settodateformat = settoyear+\"\"+settomonth+\"\"+settodate;\r\n                            if(fromdatevalue <= settodateformat && todatevalue >= settodateformat)\r\n                            {\r\n                                console.log(\"yess\");\r\n                                return(item.dateLastModif);\r\n                            }\r\n                            }\r\n                            else\r\n                            return(item.partner);\r\n                        })\r\n                    .map((item) => \r\n                        <OneList key={item.id} product={item} />)\r\n\r\n                    : products.filter(item => {\r\n                        if(documenttypevalue && fromdatevalue && todatevalue){\r\n                            let setdateformat1 = item.dateLastModif.split(' ');\r\n                            let setdateformat = setdateformat1[0].split('/');\r\n                            let settodate = setdateformat[0];\r\n                            let settomonth = setdateformat[1];\r\n                            let settoyear = setdateformat[2];\r\n                            let settodateformat = settoyear+\"\"+settomonth+\"\"+settodate;\r\n                            if(item.type.toUpperCase().includes(documenttypevalue) && fromdatevalue <= settodateformat && todatevalue >= settodateformat){\r\n                                console.log(settodateformat);\r\n                                return(item.type && item.dateLastModif && item.partner === localsitepartnervalue);\r\n                            }\r\n                        }\r\n                        else if(documenttypevalue){\r\n                            if(item.type.toUpperCase().includes(documenttypevalue))\r\n                                return (item.type && item.partner === localsitepartnervalue);\r\n                        }\r\n\r\n                        else if(fromdatevalue && todatevalue){\r\n                            let setdateformat1 = item.dateLastModif.split(' ');\r\n                            let setdateformat = setdateformat1[0].split('/');\r\n                            let settodate = setdateformat[0];\r\n                            let settomonth = setdateformat[1];\r\n                            let settoyear = setdateformat[2];\r\n                            let settodateformat = settoyear+\"\"+settomonth+\"\"+settodate;\r\n                            if(fromdatevalue <= settodateformat && todatevalue >= settodateformat)\r\n                            {\r\n                                console.log(\"yess\");\r\n                                return(item.dateLastModif && item.partner === localsitepartnervalue);\r\n                            }\r\n                            }\r\n                            else\r\n                             return(item.partner === localsitepartnervalue)\r\n                        })\r\n                    .map((item) => \r\n                            <OneList key={item.id} product={item} />)\r\n                    }\r\n                </tbody>\r\n            </table> \r\n                </div>\r\n            </div>\r\n        </section>\r\n        </div>\r\n    );\r\n        }\r\n\r\nexport default AllList","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\OneList.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\SearchButtonPopup.js",["104"],[],"import './SearchButtonPopup.css';\r\nimport React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport OneList from \"./OneList\";\r\nimport \"./tableContent.css\";\r\n\r\nfunction SearchButtonPopup(props){\r\n\r\n    const localsitevalue = props.localsite1;\r\n    const localsitepartnervalue = props.localsitepartner1;\r\n    const searchtextboxValue = props.searchTextboxValue1;\r\n    const [products, setProducts] = useState([]);\r\n\r\n    console.log(localsitevalue);\r\n    console.log(localsitepartnervalue);\r\n    console.log(searchtextboxValue);\r\n\r\n         useEffect(() => {\r\n              getAllSitesFromServer();\r\n              document.body.style.overflowY = \"hidden\";\r\n              return () => {\r\n                document.body.style.overflowY = \"scroll\";\r\n              };\r\n          },[]);\r\n          \r\n\r\n          const getAllSitesFromServer = () => {\r\n            if(localsitevalue === \"AFHOME\") {\r\n              axios.get(`/documents?localSiteName=AFHOME`).then(\r\n                  (response) =>{\r\n                     // console.log(response);\r\n                     console.log(response.data);\r\n                     setProducts(response.data.documents);\r\n                     \r\n                  },\r\n                  (error) => {\r\n                      console.log(error);\r\n                  }\r\n              );\r\n                }\r\n                else{\r\n                    axios.get(`/documents?localSiteName=NPRO`).then(\r\n                        (response) =>{\r\n                           // console.log(response);\r\n                           console.log(response.data);\r\n                           setProducts(response.data.documents);\r\n                           \r\n                        },\r\n                        (error) => {\r\n                            console.log(error);\r\n                        }\r\n                    );\r\n                }\r\n          };\r\n\r\n    return (props.trigger) ? (\r\n        <div className=\"popup1\">\r\n            <div className=\"popup-inner1\">\r\n                <div className=\"modal_close1\" onClick={() => props.setTrigger(false)}>&times;</div>\r\n                <div className=\"modal_title1\">eBDView v 1.0.1</div>\r\n                <div className=\"modal_content1\">\r\n                <div>\r\n            <section>\r\n            <div>\r\n                <div className=\"table-wrapper\">\r\n                <table>\r\n                <thead>\r\n                        <th>Date and Time</th>\r\n                        <th>Type</th>\r\n                        <th>Sender code</th>\r\n                        <th>Reciver code</th>\r\n                        <th>Partner</th>\r\n                        <th>File name</th>\r\n                        <th>Interchange Numnber</th>\r\n                        <th>Nber of documnet</th>\r\n                        <th>Doc Info</th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                    products.length > 0 && localsitepartnervalue === \"All Partners\"\r\n                    ? \r\n                    products.filter(item => {\r\n                        return (item.docNumber === searchtextboxValue);\r\n                        })\r\n                    .map((item, idx) => \r\n                        <OneList key={item.id} product={item} />)\r\n\r\n                    : products.filter(item => {\r\n                        return (item.partner === localsitepartnervalue && item.docNumber === searchtextboxValue);\r\n                        })\r\n                    .map((item, idx) => \r\n                            <OneList key={item.id} product={item} />)\r\n                    }\r\n                </tbody>\r\n            </table> \r\n                </div>\r\n            </div>\r\n        </section>\r\n        </div>\r\n                </div>\r\n                \r\n                <div className=\"modal_footer1\">\r\n                <button className=\"close-btn1\" onClick={() => props.setTrigger(false)}>close</button>\r\n                </div>\r\n                \r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default SearchButtonPopup","C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\ExitApp.js",[],[],"C:\\Users\\61470\\Documents\\Charu\\java-project\\UNSW\\FrontEnd\\ebdx_view\\src\\Components\\DatePopup.js",[],[],{"ruleId":"105","severity":1,"message":"106","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":2,"column":13,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":2,"column":29,"nodeType":"107","messageId":"108","endLine":2,"endColumn":37},{"ruleId":"105","severity":1,"message":"111","line":2,"column":39,"nodeType":"107","messageId":"108","endLine":2,"endColumn":43},{"ruleId":"105","severity":1,"message":"112","line":2,"column":45,"nodeType":"107","messageId":"108","endLine":2,"endColumn":54},{"ruleId":"105","severity":1,"message":"113","line":2,"column":56,"nodeType":"107","messageId":"108","endLine":2,"endColumn":68},{"ruleId":"105","severity":1,"message":"114","line":3,"column":24,"nodeType":"107","messageId":"108","endLine":3,"endColumn":31},{"ruleId":"105","severity":1,"message":"115","line":4,"column":28,"nodeType":"107","messageId":"108","endLine":4,"endColumn":35},{"ruleId":"105","severity":1,"message":"116","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"117","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"118","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":11},{"ruleId":"105","severity":1,"message":"119","line":23,"column":11,"nodeType":"107","messageId":"108","endLine":23,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":48,"column":8,"nodeType":"122","endLine":48,"endColumn":22,"suggestions":"123"},{"ruleId":"105","severity":1,"message":"124","line":227,"column":17,"nodeType":"107","messageId":"108","endLine":227,"endColumn":43},{"ruleId":"125","severity":1,"message":"126","line":408,"column":17,"nodeType":"127","endLine":408,"endColumn":60},{"ruleId":"105","severity":1,"message":"128","line":4,"column":7,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"129","line":5,"column":7,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"105","severity":1,"message":"130","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":16},{"ruleId":"105","severity":1,"message":"111","line":6,"column":18,"nodeType":"107","messageId":"108","endLine":6,"endColumn":22},{"ruleId":"105","severity":1,"message":"110","line":6,"column":24,"nodeType":"107","messageId":"108","endLine":6,"endColumn":32},{"ruleId":"105","severity":1,"message":"131","line":6,"column":34,"nodeType":"107","messageId":"108","endLine":6,"endColumn":46},{"ruleId":"105","severity":1,"message":"132","line":6,"column":48,"nodeType":"107","messageId":"108","endLine":6,"endColumn":56},{"ruleId":"105","severity":1,"message":"133","line":6,"column":58,"nodeType":"107","messageId":"108","endLine":6,"endColumn":67},{"ruleId":"120","severity":1,"message":"134","line":43,"column":13,"nodeType":"122","endLine":43,"endColumn":15,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":94,"column":44,"nodeType":"138","messageId":"139","endLine":94,"endColumn":46},{"ruleId":"136","severity":1,"message":"137","line":132,"column":44,"nodeType":"138","messageId":"139","endLine":132,"endColumn":46},{"ruleId":"120","severity":1,"message":"134","line":24,"column":13,"nodeType":"122","endLine":24,"endColumn":15,"suggestions":"140"},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'FormGroup' is defined but never used.","'DropdownItem' is defined but never used.","'NavLink' is defined but never used.","'NavItem' is defined but never used.","'base_url' is defined but never used.","'axios' is defined but never used.","'App' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sites'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'handleCheckboxArchiveValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'optionSearch' is assigned a value but never used.","'options' is assigned a value but never used.","'Button' is defined but never used.","'CardSubtitle' is defined but never used.","'CardText' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllSitesFromServer'. Either include it or remove the dependency array.",["142"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["143"],{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},"Update the dependencies array to be: [selectedsite, sites]",{"range":"149","text":"150"},"Update the dependencies array to be: [getAllSitesFromServer]",{"range":"151","text":"152"},{"range":"153","text":"152"},[1566,1580],"[selectedsite, sites]",[1358,1360],"[getAllSitesFromServer]",[796,798]]